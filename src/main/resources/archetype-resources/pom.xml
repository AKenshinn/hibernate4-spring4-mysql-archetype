<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>${groupId}</groupId>
	<artifactId>${artifactId}</artifactId>
	<version>${version}</version>
	<packaging>jar</packaging>

	<name>hibernate4-spring4-mysql</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<hibernate.version>4.2.2.Final</hibernate.version>
		<spring.version>4.1.2.RELEASE</spring.version>
		<mysql.version>5.1.19</mysql.version>
		<junit.version>4.11</junit.version>
		<jackson.version>2.4.1</jackson.version>
		<jackson-jaxrs.version>1.9.13</jackson-jaxrs.version>
		<!-- Plugins -->
		<java.version>1.8</java.version>
		<compiler.plugin.version>3.1</compiler.plugin.version>
		<resources.plugin.version>2.7</resources.plugin.version>
		<maven.compiler.version>3.1</maven.compiler.version>
		<hibernate4.plugin.version>1.1.0</hibernate4.plugin.version>
		<sql.plugin.version>1.5</sql.plugin.version>
		<!-- Database Config -->
		<database.driverClass>com.mysql.jdbc.Driver</database.driverClass>
		<database.url>jdbc:mysql://localhost:3306/test_db</database.url>
		<database.username><!-- your username --></database.username>
		<database.password><!-- your password --></database.password>
	</properties>

	<dependencies>
		<!-- Hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- Mysql -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.version}</version>
			<scope>runtime</scope>
		</dependency>
		<!-- JUnit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- JSON Processing -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-jaxrs</artifactId>
			<version>${jackson-jaxrs.version}</version>
		</dependency>
	</dependencies>

	<build>
		<finalName>hibernate4-spring4-mysql</finalName>
		<plugins>
			<!-- Compiler plugin compiles Java sources. -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${compiler.plugin.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<!-- Hibernate plugin read hibernate configuration and generate create 
				script -->
			<plugin>
				<groupId>de.juplo</groupId>
				<artifactId>hibernate4-maven-plugin</artifactId>
				<version>${hibernate4.plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>export</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<hibernateDialect>org.hibernate.dialect.MySQLDialect</hibernateDialect>
					<hibernateConfig>${project.basedir}/src/main/resources/hibernate.cfg.xml</hibernateConfig>
					<outputFile>${project.basedir}/src/main/resources/scripts/create-schema.sql</outputFile>
					<target>SCRIPT</target>
					<type>BOTH</type>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>${mysql.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<!-- SQL plugin connect to database and Executes SQL scripts from files 
				or inline. -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>${sql.plugin.version}</version>
				<dependencies>
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>${mysql.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<encoding>UTF-8</encoding>
					<driver>${database.driverClass}</driver>
					<url>${database.url}</url>
					<username>${database.username}</username>
					<password>${database.password}</password>
					<autocommit>true</autocommit>
					<sqlCommand></sqlCommand>
					<srcFiles>
						<srcFile>${project.basedir}/src/main/resources/scripts/create-schema.sql</srcFile>
						<srcFile>${project.basedir}/src/main/resources/scripts/init-data.sql</srcFile>
					</srcFiles>
				</configuration>
			</plugin>
			<!-- Copy the resources to the output directory for including in the JAR. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${resources.plugin.version}</version>
				<configuration>
					<!-- specify UTF-8, ISO-8859-1 or any other file encoding -->
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
	</build>

</project>
